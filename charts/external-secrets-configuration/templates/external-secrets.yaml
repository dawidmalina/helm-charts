{{- range $name, $config := .Values.objects }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $name | quote }}
{{- if $.Values.annotations }}
  annotations:
{{ toYaml $.Values.annotations | indent 4 }}
{{- end }}
spec:
  refreshInterval: {{ $.Values.refreshInterval }} # rate SecretManager pulls secrets, ex 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.clusterSecretStore | quote }}
  target:
    name: {{ $name | quote }} # name of the k8s Secret to be created
    creationPolicy: Owner
    {{- if eq "kubernetes.io/ssh-auth" $config.type }}
    template:
      type: kubernetes.io/ssh-auth
      data:
        {{- with (index $config.data 0) }}
        ssh-privatekey: {{ printf "{{ .%s | toString }}" .secretKey | quote }}
        {{- end }}
    {{- end }}
    {{- if eq "kubernetes.io/tls" $config.type }}
    template:
      type: kubernetes.io/tls
      data:
        {{- with (index $config.data 0) }}
        tls.crt: {{ printf "{{ .%s | pkcs12cert }}" .secretKey | quote }}
        tls.key: {{ printf "{{ .%s | pkcs12key }}" .secretKey | quote }}
        {{- end }}
    {{- end }}
    {{- if eq "kubernetes.io/dockerconfigjson" $config.type }}
    template:
      type: kubernetes.io/dockerconfigjson
      data:
        {{- with (index $config.data 0) }}
        .dockerconfigjson: {{ printf "{{ .%s | toString }}" .secretKey | quote }}
        {{- end }}
    {{- end }}
  {{- if $config.data }}
  data:
  {{- end }}
  {{- range $data := $config.data }}
  - secretKey: {{ $data.secretKey }} # name of the k8s secret key
    remoteRef:
      key: {{ $data.remoteRef | default ($data.secretKey) }} # secret name in Secret Manager
      {{- if $data.property }}
      property: {{ $data.property }}
      {{- end }}
      {{- if or $data.decodingStrategy $.Values.decodingStrategy }}
      decodingStrategy: {{ $data.decodingStrategy | default $.Values.decodingStrategy }}
      {{- end }}
  {{- end }}
  {{- if $config.dataFrom }}
  dataFrom:
  {{- end }}
  {{- range $data := $config.dataFrom }}
  - extract:
      key: {{ tpl $data.remoteRef $ }}
      {{- if or $data.decodingStrategy $.Values.decodingStrategy }}
      decodingStrategy: {{ $data.decodingStrategy | default $.Values.decodingStrategy }}
      {{- end }}
  {{- end }}
{{- end }}
